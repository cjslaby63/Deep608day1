# GitHub Workflow to build the GCP & Kubernetes Infrastructure
name: Infrastructure

# Only run this Workflow for pull requests on branches or pushes to 'main'.
# Limited to commits that make changes to the infrastructure directory in the repo.
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - 'infrastructure/**'
  pull_request:
    paths:
    - 'infrastructure/**'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Format
      id: fmt
      working-directory: ./infrastructure
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      working-directory: ./infrastructure
      run: terraform init

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      working-directory: ./infrastructure
      run: terraform plan -no-color
      continue-on-error: true

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details>
          <summary>Show Plan</summary>

          \`\`\`
          ${process.env.PLAN}
          \`\`\`
          </details>
          
          **Pusher: \`@${{ github.actor }}\`, Action: \`${{ github.event_name }}\`**`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })


    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      working-directory: ./infrastructure
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve